package com.wwx.study.algorithms.code.查找.binary;

/**
 * 局部最小值，相邻两个值一定不相等，如果i-1 > i 且 i < i + 1 (i > 1)那么i可以称为局部最小值，找出一个局部最小值
 *
 * <p>
 * 举例：[0,12]
 * 输出：0
 * <p>
 * 例： [12,10,9,8]
 * 输出：8
 * <p>
 * 例：[12,10,9,11,10,13]
 * 输出：9或10
 * </p>
 *
 * <p>
 * 思路：采用二分法
 * 1. 首先判断数组最前面和最后面的值，
 * 1.1 如果第一个位置的值小于第二个位置的值
 * 1.2 最后一个位置的值小于倒数第二个位置的值
 * 1.3 满足1.1 或 1.2 则直接返回
 * 2. 采用二分法，找到最中间的值
 * 2.1 如果中间i位置的值比i-1和i+1的值都小，这个位置是一个局部最小值，直接返回
 * 2.1 如果中间i位置的值比i-1的值小，比i+1的值大，则i右边一定存在局部最小值，对i～n进行二分
 * 2.3 如果中间i位置的值比i-1的值大，则i左边一定存在局部最小值，再次对0～i进行二分
 * </p>
 *
 * @author wuwenxi 2022-03-25
 */
public class LocalMinima {
}
